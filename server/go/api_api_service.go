/*
 * Project X
 *
 * OpenAPI definition for project X endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

//go:generate mockgen -package=mocks -destination=mocks/testdb.go . TestDB
import (
	"context"
	"errors"
	"net/http"

	"github.com/GIT_USER_ID/GIT_REPO_ID/go/tracedb"
)

type TestDB interface {
	CreateTest(ctx context.Context, test *Test) (string, error)
	GetTests(ctx context.Context) ([]Test, error)
}

// ApiApiService is a service that implements the logic for the ApiApiServicer
// This service should implement the business logic for every endpoint for the ApiApi API.
// Include any external packages or services that will be required by this service.
type ApiApiService struct {
	traceDB tracedb.TraceDB
	testDB  TestDB
}

// NewApiApiService creates a default api service
func NewApiApiService(traceDB tracedb.TraceDB, testDB TestDB) ApiApiServicer {
	return &ApiApiService{
		traceDB: traceDB,
		testDB:  testDB,
	}
}

// CreateTest - Create new test
func (s *ApiApiService) CreateTest(ctx context.Context, test Test) (ImplResponse, error) {
	id, err := s.testDB.CreateTest(ctx, &test)
	if err != nil {
		return Response(http.StatusInternalServerError, err.Error()), err
	}

	test.Id = id
	return Response(200, test), nil
}

// GetTests - Create new test
func (s *ApiApiService) GetTests(ctx context.Context) (ImplResponse, error) {
	tests, err := s.testDB.GetTests(ctx)
	if err != nil {
		return Response(http.StatusInternalServerError, err.Error()), err
	}

	return Response(200, tests), nil
}

func (s *ApiApiService) TestsTestidRunPost(ctx context.Context, testid string) (ImplResponse, error) {
	// TODO - update TestsTestidRunPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, TestRun{}) or use other options such as http.Ok ...
	//return Response(200, TestRun{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TestsTestidRunPost method not implemented")
}

// TestsIdResultsGet -
func (s *ApiApiService) TestsIdResultsGet(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update TestsIdResultsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Result{}) or use other options such as http.Ok ...
	//return Response(200, []Result{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TestsIdResultsGet method not implemented")
}

// TestsTestidResultsIdGet -
func (s *ApiApiService) TestsTestidResultsIdGet(ctx context.Context, testid string, id string) (ImplResponse, error) {
	// TODO - update TestsTestidResultsIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Result{}) or use other options such as http.Ok ...
	//return Response(200, []Result{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TestsTestidResultsIdGet method not implemented")
}
