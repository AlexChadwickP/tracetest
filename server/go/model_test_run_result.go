/*
 * TraceTest
 *
 * OpenAPI definition for TraceTest endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type TestRunResult struct {

	// ID
	ResultId string `json:"resultId,omitempty"`

	// test ID
	TestId string `json:"testId,omitempty"`

	// trace ID
	TraceId string `json:"traceId,omitempty"`

	// parent span ID
	SpanId string `json:"spanId,omitempty"`

	CreatedAt time.Time `json:"createdAt,omitempty"`

	CompletedAt time.Time `json:"completedAt,omitempty"`

	Response HttpResponse `json:"response,omitempty"`

	Trace ApiV3SpansResponseChunk `json:"trace,omitempty"`
}

// AssertTestRunResultRequired checks if the required fields are not zero-ed
func AssertTestRunResultRequired(obj TestRunResult) error {
	if err := AssertHttpResponseRequired(obj.Response); err != nil {
		return err
	}
	if err := AssertApiV3SpansResponseChunkRequired(obj.Trace); err != nil {
		return err
	}
	return nil
}

// AssertRecurseTestRunResultRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TestRunResult (e.g. [][]TestRunResult), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTestRunResultRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTestRunResult, ok := obj.(TestRunResult)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTestRunResultRequired(aTestRunResult)
	})
}
