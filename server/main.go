/*
 * Project X
 *
 * OpenAPI definition for project X endpoint and resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	openapi "github.com/kubeshop/tracetest/server/go"
	"github.com/kubeshop/tracetest/server/go/executor"
	"github.com/kubeshop/tracetest/server/go/testdb"
	"github.com/kubeshop/tracetest/server/go/tracedb/jaegerdb"
	"go.opentelemetry.io/collector/config/configgrpc"
	"go.opentelemetry.io/collector/config/configtls"
)

func main() {
	log.Printf("Server started")

	testDB, err := testdb.New("host=postgres user=postgres password=postgres port=5432 sslmode=disable")
	if err != nil {
		log.Fatal(err)
	}
	cfg := &jaegerdb.JaegerConnConfig{
		GRPCClientSettings: configgrpc.GRPCClientSettings{
			Endpoint:   "jaeger-query:16685",
			TLSSetting: configtls.TLSClientSetting{Insecure: true},
		},
	}

	traceDB, err := jaegerdb.New(cfg)
	if err != nil {
		log.Fatal(err)
	}

	ex, err := executor.New()
	if err != nil {
		log.Fatal(err)
	}

	apiApiService := openapi.NewApiApiService(traceDB, testDB, ex)
	apiApiController := openapi.NewApiApiController(apiApiService)

	router := openapi.NewRouter(apiApiController)
	dir := "./html"
	router.PathPrefix("/").Handler(http.FileServer(http.Dir(dir)))
	log.Fatal(http.ListenAndServe(":8080", router))
}
